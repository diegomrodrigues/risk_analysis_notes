restructure_topics:
  response_mime_type: application/json

  system_instruction: >
    Você receberá **um único objeto em JSON** com a seguinte estrutura:

    ```json
    {
      "topics": [
        {
          "topic": "Título ou nome do capítulo/subcapítulo",
          "sub_topics": [
            "Conceito-chave aprofundado em texto corrido",
            "Conceito-chave aprofundado em texto corrido"
          ]
        },
        ...
      ]
    }
    ```

    Além disso, você receberá a *árvore de diretórios* já criada, onde cada diretório representa um tópico (caso exista um diretório com o mesmo nome do tópico, utilize-o). Se não houver diretório correspondente, crie um novo tópico mantendo a coerência geral.

    Seu objetivo é **reorganizar** os tópicos e sub-tópicos de forma a torná-los mais didáticos, lógicos e estruturados, **sem perder nenhuma informação e sem repetições**. Caso haja sub-tópicos duplicados ou muito semelhantes, unifique-os em um só, mesclando o conteúdo de forma coesa. Ajuste, se necessário, a numeração e os nomes de capítulos/subcapítulos para obter uma progressão lógica, mas mantendo o sentido original.

    ### Diretrizes para a reorganização:
    1. **Estrutura e hierarquia**  
       - Respeite a estrutura `"topics" -> "sub_topics"`.  
       - Se necessário, reorganize a ordem dos tópicos para que o conteúdo fique mais claro e progressivo.  
       - Mantenha ou renomeie os tópicos para que fiquem coerentes com possíveis diretórios existentes (caso aponte para um nome já criado).

    2. **Unificação de conteúdo**  
       - Caso existam tópicos ou sub-tópicos repetidos ou que tratem do mesmo assunto, combine-os em uma única entrada, mesclando o conteúdo.  
       - Exclua apenas redundâncias literais, sem perder detalhes ou exemplos.  
       - Divida sub-tópicos muito extensos em unidades menores e coesas, mantendo a progressão lógica.
       - Garanta que cada sub-tópico seja autocontido e focado em um conceito específico.
       - Mantenha o equilíbrio entre completude e clareza, evitando sub-tópicos excessivamente longos.

    3. **Resultado Final**  
       - Retorne **apenas o JSON** resultante, mantendo a estrutura:  
         ```json
         {
           "topics": [
             {
               "topic": "Título (ou nome do diretório, se aplicável)",
               "sub_topics": [
                 "Conteúdo resultante da fusão e reorganização..."
               ]
             },
             ...
           ]
         }
         ```
       - Não inclua texto adicional além do objeto JSON em si.
       - Assegure-se de que o JSON seja **válido** e mantenha a coerência de tópicos e sub-tópicos.

    ```json
    {
      "type": "object",
      "properties": {
        "topics": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string"
              },
              "sub_topics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "topic",
              "sub_topics"
            ]
          }
        }
      },
      "required": [
        "topics"
      ]
    }
    ```

    Em resumo: você deve **reorganizar** os tópicos e sub-tópicos de um único JSON, unificar conteúdos redundantes e aproveitar o nome de diretórios já existentes se fizer sentido, **retornando apenas o JSON final** sem perda de informações.

  user_message: >
    Reestruture o JSON fornecido para que seus tópicos e sub-tópicos fiquem mais claros e didáticos, fazendo uso, quando possível, dos diretórios já existentes:

    {content}

    Lembre-se de:
    1. Manter apenas um campo "topics"
    2. Evitar repetições e manter todo o conteúdo
    3. Aproveitar nomes de diretórios existentes, se fizer sentido